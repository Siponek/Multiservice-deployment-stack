---
- name: Create /data/postgres
  ansible.builtin.file:
    path: "{{ postgres_volume }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: inventory_hostname == groups['nfs_servers'][0]

- name: Create directory /data/postgres-init
  ansible.builtin.file:
    path: /data/postgres-init
    state: directory
    owner: root
    group: root
    mode: 0755
  when: inventory_hostname == groups['swarm_managers'][0]

# Sending sql init files
- name: Copy keycloak.sql to /data/postgres-init using template
  ansible.builtin.template:
    src: keycloak.sql.j2
    dest: /data/postgres-init/keycloak.sql
    owner: root
    group: root
    mode: 0644
  when: inventory_hostname == groups['swarm_managers'][0]
- name: Copy nextcloud.sql to /data/postgres-init using template
  ansible.builtin.template:
    src: nextcloud.sql.j2
    dest: /data/postgres-init/nextcloud.sql
    owner: root
    group: root
    mode: 0644
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Pull postgres image
  community.docker.docker_image:
    name: postgres:15.1
    repository: "{{ docker_registry_url }}/postgres:15.1"
    source: pull
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Wait for postgres image
  community.docker.docker_image_info:
    name: "{{ docker_registry_url }}/postgres:15.1"
  register: postgres_image
  until: postgres_image.images | length > 0
  retries: 10
  delay: 5
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Push postgres to registry
  community.docker.docker_image:
    name: postgres:15.1
    repository: "{{ docker_registry_url }}/postgres:15.1"
    source: pull
    push: true
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Start postgres on swarm
  community.docker.docker_swarm_service:
    name: "postgres"
    image: "{{ docker_registry_url }}/postgres:15.1"
    mounts:
      - source: "{{ postgres_volume }}"
        target: "/var/lib/postgresql/data"
      - source: "/data/postgres-init"
        target: "/docker-entrypoint-initdb.d"
    publish:
      - published_port: "{{ postgres_port }}"
        target_port: "5432"
    restart_config:
      condition: any
    env:
      POSTGRES_PASSWORD: "{{ postgres_password }}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    state: present
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Wait for postgres to start on port {{ postgres_port }}
  ansible.builtin.wait_for:
    port: "{{ postgres_port }}"
    timeout: 120
  when: inventory_hostname == groups['swarm_managers'][0]
