---
- name: Create /data/nextcloud
  ansible.builtin.file:
    path: "{{ nextcloud_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Place autoconfig.php inside the /data/nextcloud directory
  ansible.builtin.template:
    src: autoconfig.php.j2
    dest: /data/nextcloud/autoconfig.php
    owner: www-data
    group: www-data
    mode: 0664
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Start nextcloud
  community.docker.docker_swarm_service:
    name: "nextcloud"
    image: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    mounts:
      - source: "{{ nextcloud_data_dir }}"
        target: "/var/www/html"
    publish:
      - published_port: 80
        target_port: 80
    env:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "{{ nextcloud_username }}"
      POSTGRES_PASSWORD: "{{ nextcloud_password }}"
      POSTGRES_HOST: "{{ postgres_host }}"
      NEXTCLOUD_ADMIN_USER: "{{ nextcloud_username }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "192.168.50.10 192.168.50.20"
    replicas: 1
    restart_config:
      condition: any
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Wait for nextcloud to start
  ansible.builtin.wait_for:
    port: "80"
    timeout: 300

# - name: Wait for nextcloud initialization
#   community.docker.docker_container_exec:
#     container: "{% for specific in result.containers if specific.Command=='/entrypoint.sh apache2-foreground' %}{{ specific.Names[0][1:] }}{% endfor %}"
#     command: php occ status --output json_pretty
#   register: nextcloud
#   until: nextcloud.containers[0].State.Status == 'installed'
#   retries: 10
#   delay: 5
#   when: inventory_hostname == groups['swarm_managers'][0]

- name: Get info on docker host
  community.docker.docker_host_info:
    containers: true
  register: result

- name: Set nextcloud container name
  ansible.builtin.set_fact:
    nc_container_name: "{% for specific in result.containers if 'nextcloud' in specific.Names[0] %}{{ specific.Names[0][1:] }}{% endfor %}"

- name: Set keycloak container name
  ansible.builtin.set_fact:
    kc_container_name: "{% for specific in result.containers if 'keycloak' in specific.Names[0] %}{{ specific.Names[0][1:] }}{% endfor %}"

- name: Launch script on keycloak machine
  ansible.builtin.script: ./sus.sh
  environment:
    NC_CONTAINER_NAME: "{{ nc_container_name }}"
    KC_CONTAINER_NAME: "{{ kc_container_name }}"
    KEYCLOAK_USERNAME: "{{ keycloak_username }}"
    KEYCLOAK_PASSWORD: "{{ keycloak_password }}"
  when: kc_container_name != ''
