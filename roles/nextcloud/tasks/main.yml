---
- name: Pull nextcloud image
  community.docker.docker_image:
    name: "nextcloud:23.0-apache"
    repository: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    source: pull
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Wait for nextcloud image
  community.docker.docker_image_info:
    name: "{{ docker_registry_url }}/nextcloud:23.0-apache"
  register: nextcloud_image
  until: nextcloud_image.images | length > 0
  retries: 10
  delay: 5
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Push nextcloud to registry
  community.docker.docker_image:
    name: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    repository: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    source: pull
    push: true
    debug: true
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Create /data/nextcloud
  ansible.builtin.file:
    path: "{{ nextcloud_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Place autoconfig.php inside the /data/nextcloud directory
  ansible.builtin.template:
    src: autoconfig.php.j2
    dest: /data/nextcloud/autoconfig.php
    owner: www-data
    group: www-data
    mode: 0664
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Start nextcloud
  community.docker.docker_swarm_service:
    name: "nextcloud"
    image: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    mounts:
      - source: "{{ nextcloud_data_dir }}"
        target: "/var/www/html"
    publish:
      - mode: host
        published_port: 80
        target_port: 80
    networks:
      - host
    env:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "{{ nextcloud_username }}"
      POSTGRES_PASSWORD: "{{ nextcloud_password }}"
      POSTGRES_HOST: "{{ postgres_host }}"
      NEXTCLOUD_ADMIN_USER: "{{ nextcloud_username }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "192.168.50.10 192.168.50.20"
    replicas: 2
    restart_config:
      condition: any
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Wait for nextcloud to start
  ansible.builtin.wait_for:
    port: "80"
    timeout: 300

# - name: Wait for nextcloud initialization
#   community.docker.docker_container_exec:
#     container: "{% for specific in result.containers if specific.Command=='/entrypoint.sh apache2-foreground' %}{{ specific.Names[0][1:] }}{% endfor %}"
#     command: php occ status --output json_pretty
#   register: nextcloud
#   until: nextcloud.containers[0].State.Status == 'installed'
#   retries: 10
#   delay: 5
#   when: inventory_hostname == groups['swarm_managers'][0]

- name: Get info on docker host
  community.docker.docker_host_info:
    containers: true
  register: result

- name: Install OpenID Connect Login
  community.docker.docker_container_exec:
    container: "{% for specific in result.containers if specific.Command=='/entrypoint.sh apache2-foreground' %}{{ specific.Names[0][1:] }}{% endfor %}"
    command: php occ app:install oidc_login
    user: www-data
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Setup OpenID Connect Login settings
  community.docker.docker_container_exec:
    container: "{% for specific in result.containers if specific.Command=='/entrypoint.sh apache2-foreground' %}{{ specific.Names[0][1:] }}{% endfor %}"
    command: >
      php occ config:system:set --value="false" --type=boolean -- allow_user_to_change_display_name
      php occ config:system:set --value="disabled" --type=string -- lost_password_link
      php occ config:system:set --value="false" --type=boolean -- oidc_login_disable_registration

      php occ config:system:set --value="{{ OIDC_PROVIDER_URL }}" --type=string -- oidc_login_provider_url
      php occ config:system:set --value="{{ OIDC_CLIENT_ID }}" --type=string -- oidc_login_client_id
      php occ config:system:set --value="{{ OIDC_CLIENT_SECRET }}" --type=string -- oidc_login_client_secret
      php occ config:system:set --value="true" --type=boolean -- oidc_login_end_session_redirect
      php occ config:system:set --value="{{ OIDC_LOGOUT_URL }}" --type=string -- oidc_login_logout_url
      php occ config:system:set --value="true" --type=boolean -- oidc_login_auto_redirect
      php occ config:system:set --value="true" --type=boolean -- oidc_login_redir_fallback

      php occ config:system:set --value=preferred_username --type=string -- oidc_login_attributes id
      php occ config:system:set --value=email --type=string -- oidc_login_attributes mail
    user: www-data
  when: inventory_hostname == groups['swarm_managers'][0]
