---
- name: Pull nextcloud image
  community.docker.docker_image:
    name: "nextcloud:23.0-apache"
    repository: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    source: pull
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Wait for nextcloud image
  community.docker.docker_image_info:
    name: "{{ docker_registry_url }}/nextcloud:23.0-apache"
  register: nextcloud_image
  until: nextcloud_image.images | length > 0
  retries: 10
  delay: 5
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Push nextcloud to registry
  community.docker.docker_image:
    name: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    repository: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    source: pull
    push: true
    debug: true
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Create /data/nextcloud
  ansible.builtin.file:
    path: "{{ nextcloud_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Place autoconfig.php inside the /data/nextcloud directory
  ansible.builtin.template:
    src: autoconfig.php.j2
    dest: /data/nextcloud/autoconfig.php
    owner: www-data
    group: www-data
    mode: 0664
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Start nextcloud
  community.docker.docker_swarm_service:
    name: "nextcloud"
    image: "{{ docker_registry_url }}/nextcloud:23.0-apache"
    mounts:
      - source: "{{ nextcloud_data_dir }}"
        target: "/var/www/html"
    publish:
      - mode: host
        published_port: 80
        target_port: 80
    networks:
      - host
    env:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "{{ nextcloud_username }}"
      POSTGRES_PASSWORD: "{{ nextcloud_password }}"
      POSTGRES_HOST: "{{ postgres_host }}"
      NEXTCLOUD_ADMIN_USER: "{{ nextcloud_username }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "192.168.50.10 192.168.50.20"
      NEXTCLOUD_CUSTOM_APPS: "oidc_login"
    replicas: 2
    restart_config:
      condition: on-failure
  when: inventory_hostname == groups['swarm_managers'][0]
