---
- name: Pull Keycloak image
  community.docker.docker_image:
    name: quay.io/keycloak/keycloak:20.0.1
    repository: "{{ docker_registry_url }}/keycloak:20.0.1"
    source: pull
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Wait for keycloak image
  community.docker.docker_image_info:
    name: "{{ docker_registry_url }}/keycloak:20.0.1"
  register: keycloak_image
  until: keycloak_image.images | length > 0
  retries: 10
  delay: 5
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Push keycloak to registry
  community.docker.docker_image:
    name: "{{ docker_registry_url }}/keycloak:20.0.1"
    repository: "{{ docker_registry_url }}/keycloak:20.0.1"
    source: pull
    push: true
    debug: true
  when: inventory_hostname == groups['swarm_managers'][0]

- name: Start Keycloak
  community.docker.docker_swarm_service:
    name: "keycloak"
    image: "{{ docker_registry_url }}/keycloak:20.0.1"
    publish:
      - published_port: 8080
        target_port: 8443
    restart_config:
      condition: any
    env:
      KEYCLOAK_CONTAINER_NAME: "keycloak"
      KEYCLOAK_ADMIN: "{{ keycloak_username }}"
      KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_password }}"
      KEYCLOAK_DB_URL: "jdbc:postgresql://{{ ansible_host }}:5432/keycloak"
      KEYCLOAK_DB_PASSWORD: "{{ postgres_password }}"
    args: "start-dev"
  when: inventory_hostname == groups['swarm_managers'][0]


# ### Get access token ###
# - name: Get kekycloak access token
#   ansible.builtin.uri:
#     url: "{{ keycloak_url }}/realms/master/protocol/openid-connect/token"
#     method: POST
#     body_format: form-urlencoded
#     body:
#       username: "{{ keycloak_username }}"
#       password: "{{ keycloak_password }}"
#       grant_type: password
#       client_id: admin-cli
#     status_code: 200
#     return_content: true
#     validate_certs: false
#   register: keycloak_access_token

# - name: Set keycloak access token
#   ansible.builtin.set_fact:
#     keycloak_access_token: "{{ keycloak_access_token.json.access_token }}"

# - name: Print keycloak access token
#   ansible.builtin.debug:
#     msg: "{{ keycloak_access_token }}"

# ### Create realm ###
# # - name: Create vcc realm
# #   ansible.builtin.uri:
# #     url: "http://{{ ansible_host }}:8080/auth/admin/realms"
# #     method: POST
# #     body_format: json
# #     body:
# #       id: vcc
# #       realm: vcc
# #       enabled: true
# #     status_code: 201
# #     return_content: yes
# #     validate_certs: no
# #     headers:
